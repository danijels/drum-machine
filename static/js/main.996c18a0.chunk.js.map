{"version":3,"sources":["smoothPiano.js","heater.js","components/display.js","components/keyboard.js","components/switch.js","App.js","reportWebVitals.js","index.js"],"names":["smoothPiano","url","name","heater","Display","props","class","id","info","Keyboard","state","key","QSound","React","WSound","ESound","ASound","SSound","DSound","ZSound","XSound","CSound","displayInfo","bind","handleClick","handleKeyDown","handleKeyUp","keyClass","renderKeyElements","document","addEventListener","this","removeEventListener","e","field","target","audio","current","volume","play","power","Object","keys","bank","includes","toUpperCase","setState","map","className","ref","src","onClick","Switch","for","label","disabled","type","onChange","handleChange","App","handleVolChange","newBank","value","on","resp","bankObject","aria-label","min","max","step","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.996c18a0.chunk.js","sourcesContent":["const smoothPiano = {\r\n  'Q': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\r\n    name: 'Chord 1'\r\n  },\r\n  'W': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\r\n    name: 'Chord 2'\r\n  }, \r\n  'E': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\r\n    name: 'Chord 3'\r\n  },\r\n  'A': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\r\n    name: 'Give Us A Light',\r\n  },\r\n  'S': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\r\n    name: 'Dry Ohh'\r\n  },\r\n  'D': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\r\n    name: 'Bld H1'\r\n  },\r\n  'Z': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\r\n    name: 'Punchy Kick 1'\r\n  },\r\n  \r\n  'X': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\r\n    name: 'Side Stick 1'\r\n  },\r\n  'C': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\r\n    name: 'Brk Snr'\r\n  }\r\n}\r\n\r\nexport default smoothPiano","const heater = {\r\n  'Q': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n    name: 'Heater 1'\r\n  },\r\n  'W': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n    name: 'Heater 2'\r\n  }, \r\n  'E': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n    name: 'Heater 3'\r\n  },\r\n  'A': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\r\n    name: 'Heater 4',\r\n  },\r\n  'S': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\r\n    name: 'Heater 6'\r\n  },\r\n  'D': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n    name: 'Dsc Oh'\r\n  },\r\n  'Z': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\r\n    name: 'Kick N Hat'\r\n  },\r\n  'X': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\r\n    name: 'RP4 KICK 1'\r\n  },\r\n  'C': {\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\r\n    name: 'Cev H2'\r\n  }\r\n}\r\n\r\nexport default heater","//Id is passed in case a Display instance needs some special styling\r\n//Also one of the displays should have the id of display for one of the tests to pass\r\nconst Display = (props) => (\r\n  <p class='sound-info' id={props.id}>{props.info}</p>\r\n)\r\n\r\nexport default Display","import * as React from 'react'\r\nimport Display from './display'\r\n\r\nclass Keyboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          key: '',\r\n          info: ''\r\n        }\r\n        //References to each of the audio elements so that I can play them from my event handlers.\r\n        //https://reactjs.org/docs/refs-and-the-dom.html\r\n        this.QSound = React.createRef();\r\n        this.WSound = React.createRef();\r\n        this.ESound = React.createRef();\r\n        this.ASound = React.createRef();\r\n        this.SSound = React.createRef();\r\n        this.DSound = React.createRef();\r\n        this.ZSound = React.createRef();\r\n        this.XSound = React.createRef();\r\n        this.CSound = React.createRef();\r\n        \r\n        this.displayInfo = this.displayInfo.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.handleKeyUp = this.handleKeyUp.bind(this);\r\n        this.keyClass = this.keyClass.bind(this);\r\n        this.renderKeyElements = this.renderKeyElements.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        document.addEventListener('keyup', this.handleKeyUp);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n        document.removeEventListener('keyup', this.handleKeyUp);\r\n    }\r\n    handleClick(e, key) {\r\n        //First it checks where the info about the key is coming from\r\n        const field = key ? key : e.target.id;\r\n        const target = `${field}Sound`;\r\n        //Selects the correct audio element\r\n        const audio = this[target].current;\r\n\r\n        //The .volume property of HTMLMediaElement accepts numbers from 0.0 to 1.0\r\n        audio.volume = this.props.volume / 100;\r\n        audio.play();\r\n\r\n        this.displayInfo(field);\r\n    }\r\n    handleKeyDown(e) {\r\n    //If the component gets the info from its parent that it's off the keys will not react\r\n        if (this.props.power) {\r\n            if (Object.keys(this.props.bank).includes(e.key.toUpperCase())) {\r\n                //this.state.key is used later on to decide which .drum-pad gets the class of 'active' \r\n                //so that it appears being pressed (see keyClass())\r\n                this.setState({ key: e.key.toUpperCase() }); \r\n                //null is being passed to the handler manually since there is no event\r\n                this.handleClick(null, e.key.toUpperCase());\r\n            }\r\n        }\r\n    }\r\n    handleKeyUp(e) {\r\n        //this.state.key is reset and the pressed key loses the .active class (see keyClass())\r\n        this.setState({ key: '' });\r\n    }\r\n    keyClass(id) {\r\n        return this.state.key === id ? 'drum-pad active' : 'drum-pad'\r\n    }\r\n    displayInfo(key) {\r\n        const bank = this.props.bank;\r\n        const info = bank[key].name;\r\n        this.setState({ info });\r\n    }\r\n    renderKeyElements() {   \r\n        const bank = this.props.bank;\r\n        const keys = Object.keys(bank);\r\n        //For each key of the bank object a drum pad div with an audio element inside of it is built\r\n        return keys.map(key => {\r\n            return <div key={key} className={this.keyClass(key)} id={key}>\r\n               {key}\r\n                <audio \r\n                  class='clip' \r\n                  id={key} \r\n                  ref={this[`${key}Sound`]}\r\n                  src={bank[key].url}\r\n                />\r\n            </div>                \r\n        });\r\n    }\r\n    render() {    \r\n        return (\r\n            <div>\r\n                <div \r\n                  id='keyboard' \r\n                  class={this.props.class}\r\n                  onClick={this.handleClick}\r\n                >\r\n                    {this.renderKeyElements()}                    \r\n                </div>\r\n                <Display \r\n                  info={this.state.info} \r\n                  id='display' \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Keyboard\r\n","const Switch = (props) => ( \r\n    <div className='switch-wrapper'>\r\n        <label \r\n          className='switch-label'\r\n          for={props.id}\r\n        />\r\n        {props.label}\r\n        { props.disabled\r\n        ? <input \r\n            type='checkbox'\r\n            className='switch'        \r\n            id={props.id}\r\n            disabled\r\n            onChange={props.handleChange}\r\n        />\r\n        : <input\r\n            type='checkbox'\r\n            className='switch'\r\n            id={props.id}\r\n            onChange={props.handleChange}\r\n          />\r\n        }      \r\n    </div>\r\n);\r\n\r\nexport default Switch","import { Component } from 'react'\r\nimport './App.scss';\r\nimport smoothPiano from './smoothPiano'\r\nimport heater from './heater'\r\n\r\nimport Keyboard from './components/keyboard'\r\nimport Display from './components/display'\r\nimport Switch from './components/switch'\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            power: false,\r\n            bank: 'Smooth Piano',\r\n            info: 'Machine turned OFF',\r\n            volume: 25\r\n        } \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleVolChange = this.handleVolChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        //Handles change for the switches, in this case the power and the bank keys\r\n        const bank = this.state.bank;\r\n    \r\n        if (e.target.id === 'power') {\r\n            const power = this.state.power;\r\n            let info;\r\n      \r\n            if (power) info = 'Machine turned OFF';\r\n            else info = `Vol: ${this.state.volume}, ${bank}`;\r\n\r\n            this.setState({\r\n                power: !power,\r\n                info\r\n            });\r\n        } else {\r\n            const newBank = bank === 'Smooth Piano' ? 'Heater' : 'Smooth Piano';\r\n            this.setState({\r\n                bank: newBank,\r\n                info: `Vol: ${this.state.volume}, ${newBank}`\r\n            });\r\n        }\r\n    }\r\n    handleVolChange(e) {\r\n        this.setState({ \r\n            volume: e.target.value,\r\n            info: `Vol: ${e.target.value}, ${this.state.bank}`\r\n        });\r\n    }\r\n    render() {\r\n        const on = this.state.power;\r\n        const volume = this.state.volume;\r\n        //.off decides if the element is responsive to pointer-events or not\r\n        const resp = on ? '' : 'off';\r\n        const bankObject = this.state.bank === 'Smooth Piano' ? smoothPiano : heater;\r\n    \r\n        return (\r\n            <div id='drum-machine'>\r\n                <Keyboard \r\n                  power={on}\r\n                  bank={bankObject}\r\n                  class={resp} \r\n                  volume={volume}\r\n                />\r\n                <div id='controls'>\r\n                    <Switch \r\n                      label='Power' \r\n                      id='power'\r\n                      disabled={false}\r\n                      handleChange={this.handleChange}\r\n                    />\r\n                    <Display info={this.state.info} />\r\n                    <input \r\n                      aria-label='volume'\r\n                      type='range' \r\n                      class={'volume ' + resp}\r\n                      min='0'\r\n                      max='100'\r\n                      step='1'\r\n                      value={volume}\r\n                      onChange={this.handleVolChange}\r\n                    />\r\n                    <Switch \r\n                      label='Bank' \r\n                      id='bank'\r\n                      disabled={on ? false : true}\r\n                      handleChange={this.handleChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}